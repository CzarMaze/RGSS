#encoding:utf-8
#==============================================================================
# ■ Lctseng::Sprite_SingleButton
#------------------------------------------------------------------------------
#     可點選的簡單按鈕
#==============================================================================
module Lctseng
class Sprite_SingleButton < Sprite_Base
  #--------------------------------------------------------------------------
  # ● 定義實例變數
  #--------------------------------------------------------------------------
  attr_reader :on
  attr_reader :symbol
  attr_accessor :check_handler
  #--------------------------------------------------------------------------
  # ● 加入設定模組
  #--------------------------------------------------------------------------
  include SpriteSensor
  #--------------------------------------------------------------------------
  # ● 初始化對象
  #--------------------------------------------------------------------------
  def initialize(position,b_name,viewport = nil)
    super(viewport)
    @need_check = true
    @check_result = false
    @check_handler = method(:default_check_handler)
    create_bitmap(b_name)
    init_position(position)
    sensor_init
    sensor_set_sense_hover(method(:handler_hover))
    show
  end
  #--------------------------------------------------------------------------
  # ● 初始化位置
  #--------------------------------------------------------------------------
  def init_position(position)
    set_pos(position)
  end
  #--------------------------------------------------------------------------
  # ● 顯示
  #--------------------------------------------------------------------------
  def show
    @show_effect = false
    sensor_activate
  end
  #--------------------------------------------------------------------------
  # ● 產生位圖
  #--------------------------------------------------------------------------
  def create_bitmap(b_name)
    prefix = b_name
    caller = bitmap_loader
    @out = caller.call(sprintf(out_fmt,prefix))
    @in = caller.call(sprintf(in_fmt,prefix))
    @select = caller.call(sprintf(select_fmt,prefix))
    self.bitmap = @out
    @on = false
  end
  #--------------------------------------------------------------------------
  # ● 檔名格式：OUT
  #--------------------------------------------------------------------------
  def out_fmt
    "%s_out"
  end
  #--------------------------------------------------------------------------
  # ● 檔名格式：IN
  #--------------------------------------------------------------------------
  def in_fmt
    "%s_in"
  end
  #--------------------------------------------------------------------------
  # ● 檔名格式：選擇
  #--------------------------------------------------------------------------
  def select_fmt
    "%s_select"
  end

  #--------------------------------------------------------------------------
  # ● 位圖圖取方法
  #--------------------------------------------------------------------------
  def bitmap_loader
    Cache.method(:picture)
  end
  #--------------------------------------------------------------------------
  # ● 更新
  #--------------------------------------------------------------------------
  def update
    super
    sensor_update
  end
  #--------------------------------------------------------------------------
  # ● 懸浮處理程序
  #--------------------------------------------------------------------------
  def handler_hover(hover)
    if hover
      if !@se_played
        change_to_on
        if @on
          Sound.play_cursor
          @se_played = true
        end
      end
    else
      change_to_off
      @se_played = false
    end
  end
  #--------------------------------------------------------------------------
  # ● 處理確認
  #--------------------------------------------------------------------------
  def process_ok
    self.bitmap = @select
  end
   #--------------------------------------------------------------------------
  # ● 滑鼠是否在精靈內？
  #--------------------------------------------------------------------------
  def sensor_mouse_in_area?
    if self.bitmap
      Mouse.area?(self.x ,self.y + 5,self.width ,self.height - 10)
    else
      false
    end
  end
  #--------------------------------------------------------------------------
  # ● 切換至ON
  #--------------------------------------------------------------------------
  def change_to_on
    return unless check_command_availble
    @on = true
    self.bitmap = @in
  end
  #--------------------------------------------------------------------------
  # ● 切換至OFF
  #--------------------------------------------------------------------------
  def change_to_off
    @on = false
    self.bitmap = @out
  end
  #--------------------------------------------------------------------------
  # ● 檢查指令是否有效
  #--------------------------------------------------------------------------
  def check_command_availble
    @check_handler.call
  end
  #--------------------------------------------------------------------------
  # ● 預設檢查函數
  #--------------------------------------------------------------------------
  def default_check_handler
    true
  end
  #--------------------------------------------------------------------------
  # ● 刷新檢查狀態
  #--------------------------------------------------------------------------
  def refresh_enable_state
    if @on && !check_command_availble
      change_to_off
    end
  end
end
end
