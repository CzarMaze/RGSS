#encoding:utf-8
#==============================================================================
# ■ Lctseng::Sprite_MiniMenu
#------------------------------------------------------------------------------
# 　顯示迷你選單的精靈
#==============================================================================
module Lctseng
class Sprite_MiniMenu < Sprite_Base
  #--------------------------------------------------------------------------
  # ● 定義實例變數
  #--------------------------------------------------------------------------
  attr_reader :on
  #--------------------------------------------------------------------------
  # ● 加入設定模組
  #--------------------------------------------------------------------------
  include SpriteSensor
  #--------------------------------------------------------------------------
  # ● 初始化對象
  #--------------------------------------------------------------------------
  def initialize(viewport = nil)
    super(viewport)
    self.opacity = 0
    @index = 0
    @open = false
    @syms = [:save,:load,:home,:exit]
    create_bitmaps
    set_pos([454,50])
    sensor_init
    sensor_set_sense_hover(method(:handler_hover))
  end
  #--------------------------------------------------------------------------
  # ● 產生位圖
  #--------------------------------------------------------------------------
  def create_bitmaps
    @bitmaps = []
    @b_clicks = []
    @syms.each_with_index do |sym,i|
      filename = "dropdown_#{sym.id2name}"
      @bitmaps[i] = Cache.picture(filename + '_over')
      @b_clicks[i] = Cache.picture(filename + '_click')
    end
    @original = Cache.picture('dropdown_original')
    self.bitmap = @original
  end
  #--------------------------------------------------------------------------
  # ● 更新
  #--------------------------------------------------------------------------
  def update
    super
    update_index
    sensor_update
  end
  #--------------------------------------------------------------------------
  # ● 懸浮處理程序
  #--------------------------------------------------------------------------
  def handler_hover(hover)
    if hover && @index >= 0
      if !@se_played
        change_to_on
        if @on
          Sound.play_cursor
          @se_played = true
        end
      end
    else
      change_to_off
      @se_played = false
    end
  end
  #--------------------------------------------------------------------------
  # ● 更新索引
  #--------------------------------------------------------------------------
  def update_index
    last_index = @index
    got = false
    4.times do |i|
      if Mouse.area?(self.x,self.y + 32*i,134,25)
        @index = i
        got = true
        break
      end
    end
    if !got
      @index = -1
      change_to_off
    end
    if last_index != @index
      @se_played = false
    end
  end
  #--------------------------------------------------------------------------
  # ● 處理確認
  #--------------------------------------------------------------------------
  def process_ok
    self.bitmap = @b_clicks[@index]
  end
   #--------------------------------------------------------------------------
  # ● 滑鼠是否在精靈內？
  #--------------------------------------------------------------------------
  def sensor_mouse_in_area?
    if self.bitmap
      Mouse.area?(self.x ,self.y + 5,self.width ,self.height - 10)
    else
      false
    end
  end
  #--------------------------------------------------------------------------
  # ● 切換至ON
  #--------------------------------------------------------------------------
  def change_to_on
    @on = true
    self.bitmap = @bitmaps[@index]
  end
  #--------------------------------------------------------------------------
  # ● 切換至OFF
  #--------------------------------------------------------------------------
  def change_to_off
    @on = false
    self.bitmap = @original
  end
  #--------------------------------------------------------------------------
  # ● 是否已開啟
  #--------------------------------------------------------------------------
  def open?
    @open
  end
  #--------------------------------------------------------------------------
  # ● 開啟
  #--------------------------------------------------------------------------
  def open
    @open = true
    sensor_activate
    self.opacity = 255
  end
  #--------------------------------------------------------------------------
  # ● 關閉
  #--------------------------------------------------------------------------
  def close
    @open = false
    sensor_deactivate
    self.opacity = 0
  end
  #--------------------------------------------------------------------------
  # ● 檢查指令是否有效
  #--------------------------------------------------------------------------
  def check_command_availble
    return true
  end
  #--------------------------------------------------------------------------
  # ● 取得symbol
  #--------------------------------------------------------------------------
  def symbol
    if @index >= 0
      return @syms[@index]
    else
      return nil
    end
  end
end
end
