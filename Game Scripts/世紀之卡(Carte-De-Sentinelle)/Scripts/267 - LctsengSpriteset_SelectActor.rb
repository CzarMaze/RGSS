#encoding:utf-8
#==============================================================================
# ■ Lctseng::Spriteset_SelectMode
#------------------------------------------------------------------------------
#     處理選角色畫面精靈組
#==============================================================================
module Lctseng
class Spriteset_SelectMode
  #--------------------------------------------------------------------------
  # ● 加入設定模組
  #--------------------------------------------------------------------------
  #--------------------------------------------------------------------------
  # ● 等待用方法
  #--------------------------------------------------------------------------
  attr_accessor :command_method
  #--------------------------------------------------------------------------
  # ● 初始化對象
  #--------------------------------------------------------------------------
  def initialize(command_method)
    @command_method = command_method
    create_viewports
    create_spritesets
  end
  #--------------------------------------------------------------------------
  # ● 產生顯示端口
  #--------------------------------------------------------------------------
  def create_viewports
    # 背景框架
    @viewport_base = Viewport.new
    # 資訊框架(Z = 10)
    @viewport_info = Viewport.new
    @viewport_info.z = 10
  end
  #--------------------------------------------------------------------------
  # ● 產生精靈組
  #--------------------------------------------------------------------------
  def create_spritesets
    # 背景
    @base = Sprite.new(@viewport_base)
    @base.bitmap = Cache.picture("BattleSelectMode_background")
    # 框
    @frame = Sprite.new(@viewport_base)
    @frame.bitmap = Cache.picture("BattleSelectMode_frame")
    # 模式
    @modes = []
    2.times do |index|
      @modes.push(Sprite_SelectMode.new(index,@viewport_info))
    end
    @modes.each {|s| s.show}
  end
  #--------------------------------------------------------------------------
  # ● 釋放
  #--------------------------------------------------------------------------
  def dispose
    dispose_spritesets
    dispose_viewports
  end
  #--------------------------------------------------------------------------
  # ● 釋放精靈組
  #--------------------------------------------------------------------------
  def dispose_spritesets
    @modes.each {|s| s.dispose}
    @frame.dispose
    @base.dispose
  end
  #--------------------------------------------------------------------------
  # ● 釋放顯示端口
  #--------------------------------------------------------------------------
  def dispose_viewports
    @viewport_base.dispose
    @viewport_info.dispose
  end
  #--------------------------------------------------------------------------
  # ● 更新
  #--------------------------------------------------------------------------
  def update
    update_spritesets
    update_input 
  end
  #--------------------------------------------------------------------------
  # ● 更新精靈組
  #--------------------------------------------------------------------------
  def update_spritesets
    @base.update
    @frame.update
    @modes.each {|s| s.update}
  end
  #--------------------------------------------------------------------------
  # ● 更新輸入
  #--------------------------------------------------------------------------
  def update_input
    if Input.trigger?(:C)
      puts "已觸發確認鍵"
      @modes.each_with_index do |s,index|
        if s.on
          s.process_ok
          s.perform_effect
          s.update
          @command_method.call(index)
        end
      end
    end
  end
  #--------------------------------------------------------------------------
  # ● 等待效果
  #--------------------------------------------------------------------------
  def wait_for_effect
    if @wait_method
      @wait_method.call
    end
  end
  #--------------------------------------------------------------------------
  # ● 是否需等待效果
  #--------------------------------------------------------------------------
  def wait_effect?
    false
  end
  
end
end