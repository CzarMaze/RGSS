#encoding:utf-8
#==============================================================================
# ■ CardBattle::CardBattleManager
#------------------------------------------------------------------------------
# 　卡片戰鬥過程管理器
#==============================================================================

module CardBattle
module CardBattleManager
  #--------------------------------------------------------------------------
  # ● 設置
  #--------------------------------------------------------------------------
  def self.setup
    init_members
  end
  #--------------------------------------------------------------------------
  # ● 初始化成員
  #--------------------------------------------------------------------------
  def self.init_members
    @main_phase = :init              # 主戰鬥階段：初始化
    @sub_phase = :prepare  # 副戰鬥階段：準備
    @turn_count = 0 # 回合計數
    @map_bgm = nil # 戰鬥前的 BGM（記憶用）
    @map_bgs = nil   #戰鬥前的 BGS（記憶用）
    save_bgm_and_bgs
    play_battle_bgm
    # 設置戰鬥卡組：玩家
    p_cards.battle_setup($game_variables[10])
    # 設置是否為連續戰鬥
    p_cards.set_keep($game_switches[10])
    # 設置戰鬥卡組：敵人
    e_cards.battle_setup(CardBattle::enemy_id) 
  end
  #--------------------------------------------------------------------------
  # ● 保存 BGM 和 BGS
  #--------------------------------------------------------------------------
  def self.save_bgm_and_bgs
    @map_bgm = RPG::BGM.last
    @map_bgs = RPG::BGS.last
  end
  #--------------------------------------------------------------------------
  # ● 播放戰鬥 BGM
  #--------------------------------------------------------------------------
  def self.play_battle_bgm
    $game_system.battle_bgm.play
    RPG::BGS.stop
  end
  #--------------------------------------------------------------------------
  # ● 播放戰鬥結束 ME
  #--------------------------------------------------------------------------
  def self.play_battle_end_me
    $game_system.battle_end_me.play
  end
  #--------------------------------------------------------------------------
  # ● 重播 BGM 和 BGS
  #--------------------------------------------------------------------------
  def self.replay_bgm_and_bgs
    @map_bgm.replay 
    @map_bgs.replay 
  end

  #--------------------------------------------------------------------------
  # ● 取得玩家卡組
  #--------------------------------------------------------------------------
  def self.p_cards
    $game_system.player_card_set
  end
  #--------------------------------------------------------------------------
  # ● 取得敵人卡組
  #--------------------------------------------------------------------------
  def self.e_cards
    $game_system.enemy_card_set
  end
  #--------------------------------------------------------------------------
  # ● 取得主要階段
  #--------------------------------------------------------------------------
  def self.main_phase
    @main_phase
  end
  #--------------------------------------------------------------------------
  # ● 取得次要階段
  #--------------------------------------------------------------------------
  def self.sub_phase
    @sub_phase
  end
  #--------------------------------------------------------------------------
  # ● 取得回合數
  #--------------------------------------------------------------------------
  def self.turn_count
    @turn_count
  end

  #--------------------------------------------------------------------------
  # ● 回合開始
  #--------------------------------------------------------------------------
  def self.turn_start
    @main_phase = :turn_start # 回合開始
    @sub_phase = :turn_start
    @turn_count += 1
  end
  #--------------------------------------------------------------------------
  # ● 進入發卡階段
  #--------------------------------------------------------------------------
  def self.phase_card_deliver
    @main_phase = :card_deliver # 開始發卡
    @sub_phase = :init # 初始化發卡
  end
  #--------------------------------------------------------------------------
  # ● 開始玩家發卡
  #--------------------------------------------------------------------------
  def self.phase_start_player_card
    @sub_phase = :player # 玩家發卡
  end
  #--------------------------------------------------------------------------
  # ● 玩家發卡結束
  #--------------------------------------------------------------------------
  def self.phase_end_player_card
    @sub_phase = :enemy # 敵人發卡
  end
  #--------------------------------------------------------------------------
  # ● 敵人發卡結束
  #--------------------------------------------------------------------------
  def self.phase_end_enemy_card
    @main_phase = :mode_select # 進入模式選擇
    @sub_phase = :init # 模式選擇初始化
  end
  #--------------------------------------------------------------------------
  # ● 模式選擇初始化結束
  #--------------------------------------------------------------------------
  def self.phase_end_mode_init
    @sub_phase = :player # 進入玩家選擇模式
  end
  #--------------------------------------------------------------------------
  # ● 玩家模式選擇結束
  #--------------------------------------------------------------------------
  def self.phase_end_mode_player
    @sub_phase = :enemy # 進入敵人選擇模式
  end
  #--------------------------------------------------------------------------
  # ● 敵人模式選擇結束
  #--------------------------------------------------------------------------
  def self.phase_end_mode_enemy
    @sub_phase = :end # 模式選擇結束
  end
  #--------------------------------------------------------------------------
  # ● 模式選擇結束
  #--------------------------------------------------------------------------
  def self.phase_end_mode_end
    @main_phase = :select_card # 進入卡片選擇
    @sub_phase = :init # 初始化卡片選擇
  end
  #--------------------------------------------------------------------------
  # ● 卡片選擇初始化結束
  #--------------------------------------------------------------------------
  def self.phase_end_card_select_init
    @sub_phase = :enemy_card # 開始選擇敵人卡片
  end
  #--------------------------------------------------------------------------
  # ● 敵人卡片選擇結束
  #--------------------------------------------------------------------------
  def self.phase_end_card_select_enemy
    @sub_phase = :enemy_end # 敵人選擇結束
  end
  #--------------------------------------------------------------------------
  # ● 敵人卡片選擇結束後處理
  #--------------------------------------------------------------------------
  def self.phase_end_card_select_enemy_end
    @sub_phase = :player_card # 開始選擇玩家處理
  end
  #--------------------------------------------------------------------------
  # ● 玩家卡片選擇結束
  #--------------------------------------------------------------------------
  def self.phase_end_card_select_player
    @sub_phase = :player_end # 玩家選擇結束
  end
  #--------------------------------------------------------------------------
  # ● 玩家卡片選擇結束後處理
  #--------------------------------------------------------------------------
  def self.phase_end_card_select_player_end
    @sub_phase = :end # 進入選擇結束
  end
  #--------------------------------------------------------------------------
  # ● 卡片選擇結束
  #--------------------------------------------------------------------------
  def self.phase_end_card_select_end
    @main_phase = :battle # 戰鬥處理
    @sub_phase = :show_card # 攤牌
  end
  #--------------------------------------------------------------------------
  # ● 戰鬥：攤牌結束
  #--------------------------------------------------------------------------
  def self.phase_end_battle_show_card
    @sub_phase = :player_effect # 玩家效果
  end
  #--------------------------------------------------------------------------
  # ● 戰鬥：玩家效果結束
  #--------------------------------------------------------------------------
  def self.phase_end_battle_player_effect
    @sub_phase = :enemy_effect # 敵人效果
  end
  #--------------------------------------------------------------------------
  # ● 戰鬥：敵人效果結束
  #--------------------------------------------------------------------------
  def self.phase_end_battle_enemy_effect
    @sub_phase = :execute # 執行傷害
  end

  #--------------------------------------------------------------------------
  # ● 戰鬥：執行傷害結束
  #--------------------------------------------------------------------------
  def self.phase_end_battle_execute
    @main_phase = :judge # 回合結果判斷
    @sub_phase = :judge
  end
  #--------------------------------------------------------------------------
  # ● 勝利處理
  #--------------------------------------------------------------------------
  def self.process_win
    p_cards.process_keep
    $game_system.battle_result.set_win(p_cards.battler_id)
    $game_system.battle_result.set_pre_info(p_cards)
    p_cards.process_level_up
    p_cards.post_battle
    $game_system.battle_result.set_post_info(p_cards)
    $game_system.battle_result.gold = e_cards.battler.gold
    
    @main_phase = :win # 勝利
    @sub_phase = :win
  end
  #--------------------------------------------------------------------------
  # ● 戰敗處理
  # reason：失敗原因(:card或:hp)
  #--------------------------------------------------------------------------
  def self.process_loss(reason)
    $game_system.battle_result.set_lose(reason)
    @main_phase = :loss # 戰敗
    @sub_phase = :loss
  end
  #--------------------------------------------------------------------------
  # ● 回合重新開始準備
  #--------------------------------------------------------------------------
  def self.prepare_turn_restart
    @main_phase = :turn_restart # 重新開始回合
    @sub_phase = :player_reserve # 玩家保留牌
  end
  #--------------------------------------------------------------------------
  # ● 玩家保留牌結束
  #--------------------------------------------------------------------------
  def self.process_end_player_reserve
    @sub_phase = :enemy_reserve # 敵人保留牌
  end
  #--------------------------------------------------------------------------
  # ● 敵人保留牌結束
  #--------------------------------------------------------------------------
  def self.process_end_enemy_reserve
    @sub_phase = :end # 結束
  end
  #--------------------------------------------------------------------------
  # ● 回合重新開始
  #--------------------------------------------------------------------------
  def self.process_end_turn_restart
    turn_start # 回合開始
  end
  #--------------------------------------------------------------------------
  # ● 戰鬥結束
  #--------------------------------------------------------------------------
  def self.phase_battle_end
    @main_phase = :end # 戰鬥結束
    @sub_phase = :end
  end
  #--------------------------------------------------------------------------
  # ● 取得雙方點數差距，此差距用來計算戰鬥傷害是否成立
  # 考慮到魔法無視防禦，提供兩個option參數：
  #   player_ignore：是否無視玩家的點數
  #   enemy_ignore : 是否無視敵人的點數
  #--------------------------------------------------------------------------
  def self.point_diff(player_ignore = false,enemy_ignore = false)
    p_pts = player_ignore ? 0 : p_cards.point_sum
    e_pts = enemy_ignore ? 0 : e_cards.point_sum
    puts "玩家點數：#{p_pts}，敵方點數：#{e_pts}，玩家忽略：#{player_ignore}，敵人忽略：#{enemy_ignore}"
    return p_pts - e_pts
  end
  #--------------------------------------------------------------------------
  # ● 回合平手
  #--------------------------------------------------------------------------
  def self.action_even
    CardBattleManager.p_cards.on_even
    CardBattleManager.e_cards.on_even
  end
  #--------------------------------------------------------------------------
  # ● 計算戰鬥傷害
  #--------------------------------------------------------------------------
  def self.compute_battle_damage(attacker,defender,diff)
    # 如果攻擊者有啟動技能
    if attacker.skill_enable
      case attacker.battler_type
      when :speed
        # 速度型，戰鬥傷害為實際值的1/3
        return ((diff /3.0) + 0.5).round
      else
        return diff
      end
      
    else
      return diff
    end
  end
  #--------------------------------------------------------------------------
  # ● 玩家攻擊成功，如果玩家為速度型，則戰鬥傷害為1/3
  #--------------------------------------------------------------------------
  def self.player_attack_success(diff)
    p_cards.attack_success
    dmg= compute_battle_damage(p_cards,e_cards,diff)
    CardBattleManager.p_cards.on_attack_result(diff)
    CardBattleManager.e_cards.on_begin_attack(dmg)
  end
  #--------------------------------------------------------------------------
  # ● 敵人攻擊成功
  #--------------------------------------------------------------------------
  def self.enemy_attack_success(diff)
    dmg= compute_battle_damage(e_cards,p_cards,diff)
    CardBattleManager.e_cards.on_attack_result(diff)
    CardBattleManager.p_cards.on_begin_attack(dmg)
  end
  #--------------------------------------------------------------------------
  # ● 玩家攻擊遭防禦
  #--------------------------------------------------------------------------
  def self.player_attack_blocked
    CardBattleManager.p_cards.on_attack_blocked
  end
  #--------------------------------------------------------------------------
  # ● 敵人攻擊遭防禦
  #--------------------------------------------------------------------------
  def self.enemy_attack_blocked
    CardBattleManager.e_cards.on_attack_blocked
  end
  #--------------------------------------------------------------------------
  # ● 卡組交換
  #--------------------------------------------------------------------------
  def self.exchange_card_table
    p_cards.card_table_swap(e_cards)
  end
  #--------------------------------------------------------------------------
  # ● 玩家防禦成功
  #--------------------------------------------------------------------------
  def self.player_defend_success(diff)
    p_cards.defend_success(diff)
  end
  #--------------------------------------------------------------------------
  # ● 玩家防禦失敗
  #--------------------------------------------------------------------------
  def self.player_defend_failure
    p_cards.defend_failure
  end
  #--------------------------------------------------------------------------
  # ● 玩家攻擊失敗
  #--------------------------------------------------------------------------
  def self.player_attack_failure
    p_cards.attack_failure
  end
  #--------------------------------------------------------------------------
  # ● 玩家攻擊平手
  #--------------------------------------------------------------------------
  def self.player_attack_even
    p_cards.attack_even
  end
  #--------------------------------------------------------------------------
  # ● 玩家防禦平手
  #--------------------------------------------------------------------------
  def self.player_defend_even
    p_cards.defend_even
  end
  #--------------------------------------------------------------------------
  # ● 玩家卡片補充之副作用
  #--------------------------------------------------------------------------
  def self.player_card_refill_effect
    e_cards.power_up_by_rate(1.25)
  end
end
end
